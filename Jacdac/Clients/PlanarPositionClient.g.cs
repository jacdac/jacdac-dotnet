/** Autogenerated file. Do not edit. */
using Jacdac;
using System;

namespace Jacdac.Clients 
{
    /// <summary>
    /// A sensor that repors 2D position, typically an optical mouse tracking sensor.
     /// 
     /// The sensor starts at an arbitrary origin (0,0) and reports the distance from that origin.
     /// 
     /// The `streaming_interval` is respected when the position is changing. When the position is not changing, the streaming interval may be throttled to `500ms`.
    /// Implements a client for the Planar position service.
    /// </summary>
    /// <seealso cref="https://microsoft.github.io/jacdac-docs/services/planarposition/" />
    public partial class PlanarPositionClient : SensorClient
    {
        public PlanarPositionClient(JDBus bus, string name)
            : base(bus, name, ServiceClasses.PlanarPosition)
        {
        }

        /// <summary>
        /// Reads the <c>position</c> register value.
        /// The current position of the sensor., x: mm,y: mm
        /// </summary>
        public object[] /*(float, float)*/ Position
        {
            get
            {
                return (object[] /*(float, float)*/)this.GetRegisterValues((ushort)PlanarPositionReg.Position, PlanarPositionRegPack.Position);
            }
        }

        /// <summary>
        /// Tries to read the <c>variant</c> register value.
        /// Specifies the type of physical sensor., 
        /// </summary>
        bool TryGetVariant(out PlanarPositionVariant value)
        {
            object[] values;
            if (this.TryGetRegisterValues((ushort)PlanarPositionReg.Variant, PlanarPositionRegPack.Variant, out values)) 
            {
                value = (PlanarPositionVariant)values[0];
                return true;
            }
            else
            {
                value = default(PlanarPositionVariant);
                return false;
            }
        }


    }
}