/** Autogenerated file. Do not edit. */
using Jacdac;
using System;

namespace Jacdac.Clients 
{
    /// <summary>
    /// This service is deprecated in favor of `gamepad` (although it is currently used by the micro:bit Arcade smart shield).
     /// A gamepad with direction and action buttons for one player.
     /// If a device has multiple controllers, it should have multiple gamepad services, using consecutive service identifiers.
    /// Implements a client for the Arcade Gamepad service.
    /// </summary>
    /// <seealso cref="https://microsoft.github.io/jacdac-docs/services/arcadegamepad/" />
    public partial class ArcadeGamepadClient : Client
    {
        public ArcadeGamepadClient(JDBus bus, string name)
            : base(bus, name, ServiceClasses.ArcadeGamepad)
        {
        }

        /// <summary>
        /// Emitted when button goes from inactive to active.
        /// </summary>
        public event ClientEventHandler Down
        {
            add
            {
                this.AddEvent((ushort)ArcadeGamepadEvent.Down, value);
            }
            remove
            {
                this.RemoveEvent((ushort)ArcadeGamepadEvent.Down, value);
            }
        }

        /// <summary>
        /// Emitted when button goes from active to inactive.
        /// </summary>
        public event ClientEventHandler Up
        {
            add
            {
                this.AddEvent((ushort)ArcadeGamepadEvent.Up, value);
            }
            remove
            {
                this.RemoveEvent((ushort)ArcadeGamepadEvent.Up, value);
            }
        }


    }
}