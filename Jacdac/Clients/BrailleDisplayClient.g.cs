/** Autogenerated file. Do not edit. */
using Jacdac;
using System;

namespace Jacdac.Clients 
{
    /// <summary>
    /// A Braille pattern display module. This module display [unicode braille patterns](https://www.unicode.org/charts/PDF/U2800.pdf), country specific encoding have to be implemented by the clients.
    /// Implements a client for the Braille display service.
    /// </summary>
    /// <seealso cref="https://microsoft.github.io/jacdac-docs/services/brailledisplay/" />
    public partial class BrailleDisplayClient : Client
    {
        public BrailleDisplayClient(JDBus bus, string name)
            : base(bus, name, ServiceClasses.BrailleDisplay)
        {
        }

        /// <summary>
        /// Reads the <c>enabled</c> register value.
        /// Determins if the braille display is active., 
        /// </summary>
        public bool Enabled
        {
            get
            {
                return (bool)this.GetRegisterValueAsBool((ushort)BrailleDisplayReg.Enabled, BrailleDisplayRegPack.Enabled);
            }
            set
            {
                
                this.SetRegisterValue((ushort)BrailleDisplayReg.Enabled, BrailleDisplayRegPack.Enabled, value);
            }

        }

        /// <summary>
        /// Reads the <c>patterns</c> register value.
        /// Braille patterns to show. Must be unicode characters between `0x2800` and `0x28ff`., 
        /// </summary>
        public string Patterns
        {
            get
            {
                return (string)this.GetRegisterValue((ushort)BrailleDisplayReg.Patterns, BrailleDisplayRegPack.Patterns);
            }
            set
            {
                
                this.Enabled = true;
                this.SetRegisterValue((ushort)BrailleDisplayReg.Patterns, BrailleDisplayRegPack.Patterns, value);
            }

        }

        /// <summary>
        /// Reads the <c>length</c> register value.
        /// Gets the number of patterns that can be displayed., _: #
        /// </summary>
        public uint Length
        {
            get
            {
                return (uint)this.GetRegisterValue((ushort)BrailleDisplayReg.Length, BrailleDisplayRegPack.Length);
            }
        }


    }
}