/** Autogenerated file. Do not edit. */
using Jacdac;
using System;

namespace Jacdac.Clients 
{
    /// <summary>
    /// Measures the amount of liquid precipitation over an area in a predefined period of time.
    /// Implements a client for the Rain gauge service.
    /// </summary>
    /// <seealso cref="https://microsoft.github.io/jacdac-docs/services/raingauge/" />
    public partial class RainGaugeClient : SensorClient
    {
        public RainGaugeClient(JDBus bus, string name)
            : base(bus, name, ServiceClasses.RainGauge)
        {
        }

        /// <summary>
        /// Reads the <c>precipitation</c> register value.
        /// Total precipitation recorded so far., _: mm
        /// </summary>
        public float Precipitation
        {
            get
            {
                return (float)this.GetRegisterValue((ushort)RainGaugeReg.Precipitation, RainGaugeRegPack.Precipitation);
            }
        }

        /// <summary>
        /// Tries to read the <c>precipitation_precision</c> register value.
        /// Typically the amount of rain needed for tipping the bucket., _: mm
        /// </summary>
        bool TryGetPrecipitationPrecision(out float value)
        {
            object[] values;
            if (this.TryGetRegisterValues((ushort)RainGaugeReg.PrecipitationPrecision, RainGaugeRegPack.PrecipitationPrecision, out values)) 
            {
                value = (float)values[0];
                return true;
            }
            else
            {
                value = default(float);
                return false;
            }
        }


    }
}