/** Autogenerated file. Do not edit. */
using Jacdac;
using System;

namespace Jacdac.Clients 
{
    /// <summary>
    /// A sensor that measures strength and polarity of magnetic field.
    /// Implements a client for the Magnetic field level service.
    /// </summary>
    /// <seealso cref="https://microsoft.github.io/jacdac-docs/services/magneticfieldlevel/" />
    public partial class MagneticFieldLevelClient : SensorClient
    {
        public MagneticFieldLevelClient(JDBus bus, string name)
            : base(bus, name, ServiceClasses.MagneticFieldLevel)
        {
        }

        /// <summary>
        /// Reads the <c>strength</c> register value.
        /// Indicates the strength of magnetic field between -1 and 1.
        /// When no magnet is present the value should be around 0.
        /// For analog sensors,
        /// when the north pole of the magnet is on top of the module
        /// and closer than south pole, then the value should be positive.
        /// For digital sensors,
        /// the value should either `0` or `1`, regardless of polarity., _: /
        /// </summary>
        public float Strength
        {
            get
            {
                return (float)this.GetRegisterValue((ushort)MagneticFieldLevelReg.Strength, MagneticFieldLevelRegPack.Strength);
            }
        }

        /// <summary>
        /// Tries to read the <c>variant</c> register value.
        /// Determines which magnetic poles the sensor can detected,
        /// and whether or not it can measure their strength or just presence., 
        /// </summary>
        bool TryGetVariant(out MagneticFieldLevelVariant value)
        {
            object[] values;
            if (this.TryGetRegisterValues((ushort)MagneticFieldLevelReg.Variant, MagneticFieldLevelRegPack.Variant, out values)) 
            {
                value = (MagneticFieldLevelVariant)values[0];
                return true;
            }
            else
            {
                value = default(MagneticFieldLevelVariant);
                return false;
            }
        }

        /// <summary>
        /// Emitted when strong-enough magnetic field is detected.
        /// </summary>
        public event ClientEventHandler Active
        {
            add
            {
                this.AddEvent((ushort)MagneticFieldLevelEvent.Active, value);
            }
            remove
            {
                this.RemoveEvent((ushort)MagneticFieldLevelEvent.Active, value);
            }
        }

        /// <summary>
        /// Emitted when strong-enough magnetic field is no longer detected.
        /// </summary>
        public event ClientEventHandler Inactive
        {
            add
            {
                this.AddEvent((ushort)MagneticFieldLevelEvent.Inactive, value);
            }
            remove
            {
                this.RemoveEvent((ushort)MagneticFieldLevelEvent.Inactive, value);
            }
        }


    }
}