/** Autogenerated file. Do not edit. */
using Jacdac;
using System;

namespace Jacdac.Clients 
{
    /// <summary>
    /// A ROS (Robot Operating System https://www.ros.org/) controller that can act as a broker for messages.
    /// Implements a client for the ROS service.
    /// </summary>
    /// <seealso cref="https://microsoft.github.io/jacdac-docs/services/ros/" />
    public partial class RosClient : Client
    {
        public RosClient(JDBus bus, string name)
            : base(bus, name, ServiceClasses.Ros)
        {
        }


        
        /// <summary>
        /// Publishes a JSON-encoded message to the given topic.
        /// </summary>
        public void PublishMessage(string node, string topic, string message)
        {
            this.SendCmdPacked((ushort)RosCmd.PublishMessage, RosCmdPack.PublishMessage, new object[] { node, topic, message });
        }

        
        /// <summary>
        /// Subscribes to a message topic. Subscribed topics will emit message reports.
        /// </summary>
        public void SubscribeMessage(string node, string topic)
        {
            this.SendCmdPacked((ushort)RosCmd.SubscribeMessage, RosCmdPack.SubscribeMessage, new object[] { node, topic });
        }

    }
}