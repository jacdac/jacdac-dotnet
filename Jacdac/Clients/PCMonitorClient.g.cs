/** Autogenerated file. Do not edit. */
using Jacdac;
using System;

namespace Jacdac.Clients 
{
    /// <summary>
    /// Measures PC monitor.
    /// Implements a client for the PC monitor service.
    /// </summary>
    /// <seealso cref="https://microsoft.github.io/jacdac-docs/services/pcmonitor/" />
    public partial class PCMonitorClient : Client
    {
        public PCMonitorClient(JDBus bus, string name)
            : base(bus, name, ServiceClasses.PCMonitor)
        {
        }

        /// <summary>
        /// Reads the <c>cpu_usage</c> register value.
        /// CPU usage in percent., _: %
        /// </summary>
        public uint CpuUsage
        {
            get
            {
                return (uint)this.GetRegisterValue((ushort)PCMonitorReg.CpuUsage, PCMonitorRegPack.CpuUsage);
            }
        }

        /// <summary>
        /// Reads the <c>cpu_temperature</c> register value.
        /// CPU temperature in Celsius., _: °C
        /// </summary>
        public uint CpuTemperature
        {
            get
            {
                return (uint)this.GetRegisterValue((ushort)PCMonitorReg.CpuTemperature, PCMonitorRegPack.CpuTemperature);
            }
        }

        /// <summary>
        /// Reads the <c>ram_usage</c> register value.
        /// RAM usage in percent., _: %
        /// </summary>
        public uint RamUsage
        {
            get
            {
                return (uint)this.GetRegisterValue((ushort)PCMonitorReg.RamUsage, PCMonitorRegPack.RamUsage);
            }
        }

        /// <summary>
        /// Reads the <c>gpu_information</c> register value.
        /// GPU info., usage: %,temperature: °C
        /// </summary>
        public object[] /*(uint, uint)*/ GpuInformation
        {
            get
            {
                return (object[] /*(uint, uint)*/)this.GetRegisterValues((ushort)PCMonitorReg.GpuInformation, PCMonitorRegPack.GpuInformation);
            }
        }

        /// <summary>
        /// Reads the <c>network_information</c> register value.
        /// Network transmit/receive speed in Kbytes per second.
        /// 
        /// A measure of PC monitor., tx: KB,rx: KB
        /// </summary>
        public object[] /*(uint, uint)*/ NetworkInformation
        {
            get
            {
                return (object[] /*(uint, uint)*/)this.GetRegisterValues((ushort)PCMonitorReg.NetworkInformation, PCMonitorRegPack.NetworkInformation);
            }
        }


    }
}