/** Autogenerated file. Do not edit. */
using Jacdac;
using System;

namespace Jacdac.Clients 
{
    /// <summary>
    /// A service that reports the output of an analog to digital converter (ADC).
    /// Implements a client for the Analog Measurement service.
    /// </summary>
    /// <seealso cref="https://microsoft.github.io/jacdac-docs/services/analogmeasurement/" />
    public partial class AnalogMeasurementClient : SensorClient
    {
        public AnalogMeasurementClient(JDBus bus, string name)
            : base(bus, name, ServiceClasses.AnalogMeasurement)
        {
        }

        /// <summary>
        /// Reads the <c>measurement_type</c> register value.
        /// The type of measurement that is taking place. Absolute results are measured with respect to ground, whereas differential results are measured against another signal that is not ground., 
        /// </summary>
        public AnalogMeasurementADCMeasurementType MeasurementType
        {
            get
            {
                return (AnalogMeasurementADCMeasurementType)this.GetRegisterValue((ushort)AnalogMeasurementReg.MeasurementType, AnalogMeasurementRegPack.MeasurementType);
            }
        }

        /// <summary>
        /// Reads the <c>measurement_name</c> register value.
        /// A string containing the net name that is being measured e.g. `POWER_DUT` or a reference e.g. `DIFF_DEV1_DEV2`. These constants can be used to identify a measurement from client code., 
        /// </summary>
        public string MeasurementName
        {
            get
            {
                return (string)this.GetRegisterValue((ushort)AnalogMeasurementReg.MeasurementName, AnalogMeasurementRegPack.MeasurementName);
            }
        }

        /// <summary>
        /// Reads the <c>measurement</c> register value.
        /// The result of the ADC measurement., _: V
        /// </summary>
        public float Measurement
        {
            get
            {
                return (float)this.GetRegisterValue((ushort)AnalogMeasurementReg.Measurement, AnalogMeasurementRegPack.Measurement);
            }
        }


    }
}