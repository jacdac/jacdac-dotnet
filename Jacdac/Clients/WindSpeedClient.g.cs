/** Autogenerated file. Do not edit. */
using Jacdac;
using System;

namespace Jacdac.Clients 
{
    /// <summary>
    /// A sensor that measures wind speed.
    /// Implements a client for the Wind speed service.
    /// </summary>
    /// <seealso cref="https://microsoft.github.io/jacdac-docs/services/windspeed/" />
    public partial class WindSpeedClient : SensorClient
    {
        public WindSpeedClient(JDBus bus, string name)
            : base(bus, name, ServiceClasses.WindSpeed)
        {
        }

        /// <summary>
        /// Reads the <c>wind_speed</c> register value.
        /// The velocity of the wind., _: m/s
        /// </summary>
        public float WindSpeed
        {
            get
            {
                return (float)this.GetRegisterValue((ushort)WindSpeedReg.WindSpeed, WindSpeedRegPack.WindSpeed);
            }
        }

        /// <summary>
        /// Tries to read the <c>wind_speed_error</c> register value.
        /// Error on the reading, _: m/s
        /// </summary>
        bool TryGetWindSpeedError(out float value)
        {
            object[] values;
            if (this.TryGetRegisterValues((ushort)WindSpeedReg.WindSpeedError, WindSpeedRegPack.WindSpeedError, out values)) 
            {
                value = (float)values[0];
                return true;
            }
            else
            {
                value = default(float);
                return false;
            }
        }

        /// <summary>
        /// Tries to read the <c>max_wind_speed</c> register value.
        /// Maximum speed that can be measured by the sensor., _: m/s
        /// </summary>
        bool TryGetMaxWindSpeed(out float value)
        {
            object[] values;
            if (this.TryGetRegisterValues((ushort)WindSpeedReg.MaxWindSpeed, WindSpeedRegPack.MaxWindSpeed, out values)) 
            {
                value = (float)values[0];
                return true;
            }
            else
            {
                value = default(float);
                return false;
            }
        }


    }
}